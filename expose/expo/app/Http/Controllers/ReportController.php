<?php

namespace App\Http\Controllers;

use Auth, DB, Session;
use App\Models\Report;
use Illuminate\Http\Request;
use App\ReportRobot\Robot;
use App\ReportRobot\FormMan;

class ReportController extends Controller
{ 
    public function listAllCases()
    {
        $robot = new Robot;        
        $cases = $robot->getAllCases()->toArray();       
        //return view('pages.cases')->withCases($cases);
        return view('pages.cases', [ 'cases' => DB::table('reporteds')->paginate(3) ]);
    }

    
    public function viewCase(Request $request, $id)
    {
        $robot = new Robot;
        $forman = new FormMan;    
        $cc = $forman->FormInput($id);
        $verifyCase = $robot->doesCaseExist($cc);
		if($verifyCase === 'notValid') { 
            Session::flash('message', 'Attemp not allowed!'); 
            return redirect('/books');
        }
        $case = $robot->getCaseDetailsByCode($cc)[0];
        // show detail depending on access level
        $userAccess = $robot->getAccessLevel(); 
		if($userAccess === 'MasterAdmin') { return view('pages.master.viewcase')->withCase($case); }
		if($userAccess === 'Admin') { return view('pages.admin.viewcase')->withCase($case); }  
        return view('pages.viewcase')->withCase($case);
    }
  
    public function reportCase()
    {
        $robot = new Robot;        
        $userExist =  $robot->checkUserIfExist(Auth::user()->email); 
        if($userExist === 'No'){
            Session::flash('message', 'Please, login or create an account to continue.'); 
            return redirect('/login');
        }
        
        $verifiedUser =  $robot->checkUserIfVeried(Auth::user()->email)['verified']; 
        if($verifiedUser === 1) { 
            return view('pages.report_case');
        } 
        Session::flash('message', 'Sorry! Please try again'); return back();
    }

    public function postCase(Request $request)
    {
        $robot = new Robot;        
        $userExist =  $robot->checkUserIfExist(Auth::user()->email); 
        if($userExist === 'No'){
            Session::flash('message', 'Please, login or create an account to continue.'); 
            return redirect('/login');
        }
        
        $verifiedUser =  $robot->checkUserIfVeried(Auth::user()->email)['verified']; 
        if($verifiedUser === 1) { 
            $checkPostRequestInput = $robot->validateCaseReportingRequest($request);
            if ($checkPostRequestInput->fails()) 
            {
                Session::flash('message', 'All fields with asteric(*) are compulsory.'); 
                return back(); 
            } 
            $answerValidity = $robot->checkPostAnswer($request->input('no1'), $request->input('no2'), $request->input('qna'));
            if($answerValidity === false)
            {
                Session::flash('message', 'Please, give a correct answer.');
                return back(); 
            }
            if($request->toArray()['vGender'] === 'select')
            {
                Session::flash('message', 'Please, tell us your gender.');
                return back(); 
            }
            if($request->toArray()['oGender'] === 'select')
            {
                Session::flash('message', 'Please, tell us the gender of the offender.');
                return back(); 
            }
            $postRequestData = $robot->getPostingRequestData($request);
            $status = $robot->doSaveCase($postRequestData);
            if($status === 'unsuccessful'){ Session::flash('message', 'Action not successful! Please, try again.'); return back();}
            Session::flash('message', 'New Case Report Successful!'); return redirect('/');
        } 
        Session::flash('message', 'Sorry! Please try again'); return back();
    }
    
}
